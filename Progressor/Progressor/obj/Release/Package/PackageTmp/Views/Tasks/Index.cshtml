@model IEnumerable<Progressor.Models.Task>

@{
    ViewBag.Title = "Tasking Dashboard";
}

<h2>Tasking Dashboard</h2>

<p>
    @Html.ActionLink("New Task", "Create")
</p>
<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.userID)
        </th>*@
        <th>
            Name
        </th>
        <th>
            Status
        </th>
        <th>
            Progress
        </th>
        <th>
            Due in (Days)
        </th>
        @*<th>
            Priority
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.createDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.startDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.completeDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.difficultyIndex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.importanceIndex)
        </th>*@
        
        <th></th>
    </tr>

@foreach (var item in Model)
{
    string lvl = "row-lvl";
    if (item.getPriorityIndex() == 0)
    {
        lvl += "0";
    }
    else if (item.getPriorityIndex() < 100)
    {
        lvl += "1";
    }
    else if (item.getPriorityIndex() < 250)
    {
        lvl += "2";
    }
    else if (item.getPriorityIndex() < 500)
    {
        lvl += "3";
    }
    else
    {
        lvl += "4";
    }

    <tr class=@lvl.ToString()>
        @*<td>
            @Html.DisplayFor(modelItem => item.userID)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.taskStatus)
        </td>
        <td>
            @{
                if (item.progressMax.HasValue && item.progressIndex.HasValue)
                {
                    string str = "" + ((Decimal)(1.0 * item.progressIndex / item.progressMax * 100)).ToString("#.##") + "%";
                    <text>@str</text>
                }
                else
                {
                    <text>-</text>
                }
            }
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.progressMax)
        </td>*@
        <td>
            @{
                if (item.taskStatus=="Completed")
                {
                    <text>-</text>
                }
                else if (item.dueDate.HasValue)
                {
                    string str = "" + ((int)(item.dueDate.Value - DateTime.Now.Date).TotalDays);
                    <text>@str</text>
                }
                else
                {
                    <text>-</text>
                }
            }
        </td>   
        @*<td>
            @item.getPriorityIndex()
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.createDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.startDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.completeDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.difficultyIndex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.importanceIndex)
        </td>*@
        
        <td>
            @if (item.taskStatus != "Completed")
            {
                <text>@Html.ActionLink("Update Progress", "UpdateProgress", new { id = item.ID })</text>
                <text> | </text>
                <text>@Html.ActionLink("Edit", "Edit", new { id = item.ID })</text>
                <text> | </text>
            }

            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
</td>
    </tr>
}

</table>

<style>
    tr.row-lvl0 {
        background-color: lightgray;
    }

    tr.row-lvl1 {
        background-color: lightskyblue;
    }

    tr.row-lvl2 {
        background-color: greenyellow;
    }

    tr.row-lvl3 {
        background-color: yellow;
    }

    tr.row-lvl4 {
        background-color: orangered;
    }
</style>
